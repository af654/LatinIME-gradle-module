import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "libjni_latinime_common_static.so"
            moduleName "libjni_latinime.so"
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        noCompress 'dict'
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set .so files location to libs instead of jniLibs
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    // TODO
    android {
        lintOptions {
            abortOnError false
        }
    }

    def ndkProjectPath="src/main"

    // file: local.properties should have something like this:
    // ndk.dir=C\:\\Program_Files\\Android\\android-ndk-r10e
    // sdk.dir=C\:\\Program Files (x86)\\Android\\android-sdk
    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')
        def ndkCmd = ''
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            ndkCmd = 'ndk-build.cmd'
        } else {
            ndkCmd = 'ndk-build'
        }
        commandLine "${ndkDir}/${ndkCmd}",
                "NDK_PROJECT_PATH=${ndkProjectPath}",
                "APP_BUILD_SCRIPT=${ndkProjectPath}/jni/Android.mk",
                "NDK_APPLICATION_MK=${ndkProjectPath}/jni/Application.mk"
    }


    task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
        destinationDir file("$buildDir/native-libs")
        baseName 'native-libs'
        extension 'jar'
        from fileTree(dir: 'libs', include: '**/*.so')
        into 'lib/'
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn(nativeLibsToJar)
    }

    clean.doFirst {
        delete "${ndkProjectPath}/libs"
        delete "${ndkProjectPath}/obj"
    }


}
dependencies {
    compile fileTree(dir: 'libs', include: ['.jar','.so'])
    compile "com.android.support:support-v4:${SUPPORT_PACKAGE_VERSION}"
    compile "com.android.support:appcompat-v7:${APP_COMPAT_PACKAGE_VERSION}"
    compile 'javax.annotation:jsr250-api:1.0'
}
